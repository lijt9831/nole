<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxyd.nole.jpa.mysql.alpha.raw.mapper.Sys01PermissionMapper">
  <resultMap id="BaseResultMap" type="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01Permission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="is_tree" jdbcType="INTEGER" property="isTree" />
    <result column="is_branch" jdbcType="INTEGER" property="isBranch" />
    <result column="is_leaf" jdbcType="INTEGER" property="isLeaf" />
    <result column="is_vein" jdbcType="INTEGER" property="isVein" />
    <result column="is_vein_main" jdbcType="INTEGER" property="isVeinMain" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="order" jdbcType="INTEGER" property="order" />
    <result column="is_collapsed" jdbcType="INTEGER" property="isCollapsed" />
    <result column="icon" jdbcType="VARCHAR" property="icon" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `id`, `pid`, `is_tree`, `is_branch`, `is_leaf`, `is_vein`, `is_vein_main`, `name`, 
    `level`, `order`, `is_collapsed`, `icon`, `description`, `create_time`
  </sql>
  <select id="selectByExample" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01PermissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys01_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys01_permission
    where `id` = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys01_permission
    where `id` = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01PermissionExample">
    delete from sys01_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01Permission">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys01_permission (`id`, `pid`, `is_tree`, 
      `is_branch`, `is_leaf`, `is_vein`, 
      `is_vein_main`, `name`, `level`, 
      `order`, `is_collapsed`, `icon`, 
      `description`, `create_time`)
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{isTree,jdbcType=INTEGER}, 
      #{isBranch,jdbcType=INTEGER}, #{isLeaf,jdbcType=INTEGER}, #{isVein,jdbcType=INTEGER}, 
      #{isVeinMain,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{order,jdbcType=INTEGER}, #{isCollapsed,jdbcType=INTEGER}, #{icon,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01Permission">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys01_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      `id`,
      <if test="pid != null">
        `pid`,
      </if>
      <if test="isTree != null">
        `is_tree`,
      </if>
      <if test="isBranch != null">
        `is_branch`,
      </if>
      <if test="isLeaf != null">
        `is_leaf`,
      </if>
      <if test="isVein != null">
        `is_vein`,
      </if>
      <if test="isVeinMain != null">
        `is_vein_main`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="level != null">
        `level`,
      </if>
      <if test="order != null">
        `order`,
      </if>
      <if test="isCollapsed != null">
        `is_collapsed`,
      </if>
      <if test="icon != null">
        `icon`,
      </if>
      <if test="description != null">
        `description`,
      </if>
      <if test="createTime != null">
        `create_time`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=INTEGER},
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="isTree != null">
        #{isTree,jdbcType=INTEGER},
      </if>
      <if test="isBranch != null">
        #{isBranch,jdbcType=INTEGER},
      </if>
      <if test="isLeaf != null">
        #{isLeaf,jdbcType=INTEGER},
      </if>
      <if test="isVein != null">
        #{isVein,jdbcType=INTEGER},
      </if>
      <if test="isVeinMain != null">
        #{isVeinMain,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        #{order,jdbcType=INTEGER},
      </if>
      <if test="isCollapsed != null">
        #{isCollapsed,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01PermissionExample" resultType="java.lang.Long">
    select count(*) from sys01_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys01_permission
    <set>
      <if test="record.id != null">
        `id` = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        `pid` = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.isTree != null">
        `is_tree` = #{record.isTree,jdbcType=INTEGER},
      </if>
      <if test="record.isBranch != null">
        `is_branch` = #{record.isBranch,jdbcType=INTEGER},
      </if>
      <if test="record.isLeaf != null">
        `is_leaf` = #{record.isLeaf,jdbcType=INTEGER},
      </if>
      <if test="record.isVein != null">
        `is_vein` = #{record.isVein,jdbcType=INTEGER},
      </if>
      <if test="record.isVeinMain != null">
        `is_vein_main` = #{record.isVeinMain,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        `level` = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.order != null">
        `order` = #{record.order,jdbcType=INTEGER},
      </if>
      <if test="record.isCollapsed != null">
        `is_collapsed` = #{record.isCollapsed,jdbcType=INTEGER},
      </if>
      <if test="record.icon != null">
        `icon` = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        `description` = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        `create_time` = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys01_permission
    set `id` = #{record.id,jdbcType=INTEGER},
      `pid` = #{record.pid,jdbcType=INTEGER},
      `is_tree` = #{record.isTree,jdbcType=INTEGER},
      `is_branch` = #{record.isBranch,jdbcType=INTEGER},
      `is_leaf` = #{record.isLeaf,jdbcType=INTEGER},
      `is_vein` = #{record.isVein,jdbcType=INTEGER},
      `is_vein_main` = #{record.isVeinMain,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `level` = #{record.level,jdbcType=INTEGER},
      `order` = #{record.order,jdbcType=INTEGER},
      `is_collapsed` = #{record.isCollapsed,jdbcType=INTEGER},
      `icon` = #{record.icon,jdbcType=VARCHAR},
      `description` = #{record.description,jdbcType=VARCHAR},
      `create_time` = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01Permission">
    update sys01_permission
    <set>
      <if test="pid != null">
        `pid` = #{pid,jdbcType=INTEGER},
      </if>
      <if test="isTree != null">
        `is_tree` = #{isTree,jdbcType=INTEGER},
      </if>
      <if test="isBranch != null">
        `is_branch` = #{isBranch,jdbcType=INTEGER},
      </if>
      <if test="isLeaf != null">
        `is_leaf` = #{isLeaf,jdbcType=INTEGER},
      </if>
      <if test="isVein != null">
        `is_vein` = #{isVein,jdbcType=INTEGER},
      </if>
      <if test="isVeinMain != null">
        `is_vein_main` = #{isVeinMain,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        `level` = #{level,jdbcType=INTEGER},
      </if>
      <if test="order != null">
        `order` = #{order,jdbcType=INTEGER},
      </if>
      <if test="isCollapsed != null">
        `is_collapsed` = #{isCollapsed,jdbcType=INTEGER},
      </if>
      <if test="icon != null">
        `icon` = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        `description` = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        `create_time` = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01Permission">
    update sys01_permission
    set `pid` = #{pid,jdbcType=INTEGER},
      `is_tree` = #{isTree,jdbcType=INTEGER},
      `is_branch` = #{isBranch,jdbcType=INTEGER},
      `is_leaf` = #{isLeaf,jdbcType=INTEGER},
      `is_vein` = #{isVein,jdbcType=INTEGER},
      `is_vein_main` = #{isVeinMain,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `level` = #{level,jdbcType=INTEGER},
      `order` = #{order,jdbcType=INTEGER},
      `is_collapsed` = #{isCollapsed,jdbcType=INTEGER},
      `icon` = #{icon,jdbcType=VARCHAR},
      `description` = #{description,jdbcType=VARCHAR},
      `create_time` = #{createTime,jdbcType=TIMESTAMP}
    where `id` = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Sys01PermissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys01_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>