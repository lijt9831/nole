<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxyd.nole.jpa.mysql.alpha.raw.mapper.Nole206MessageMapper">
  <resultMap id="BaseResultMap" type="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206Message">
    <id column="nole206_id" jdbcType="BIGINT" property="id" />
    <result column="nole200_id" jdbcType="BIGINT" property="nole200Id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="available_or_not" jdbcType="CHAR" property="availableOrNot" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `nole206_id`, `nole200_id`, `gmt_create`, `type`, `content`, `available_or_not`
  </sql>
  <select id="selectByExample" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nole206_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from nole206_message
    where `nole206_id` = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from nole206_message
    where `nole206_id` = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206MessageExample">
    delete from nole206_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206Message">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nole206_message (`nole200_id`, `gmt_create`, `type`, 
      `content`, `available_or_not`)
    values (#{nole200Id,jdbcType=BIGINT}, #{gmtCreate,jdbcType=TIMESTAMP}, #{type,jdbcType=CHAR}, 
      #{content,jdbcType=VARCHAR}, #{availableOrNot,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206Message">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nole206_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nole200Id != null">
        `nole200_id`,
      </if>
      <if test="gmtCreate != null">
        `gmt_create`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="content != null">
        `content`,
      </if>
      <if test="availableOrNot != null">
        `available_or_not`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nole200Id != null">
        #{nole200Id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=CHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="availableOrNot != null">
        #{availableOrNot,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206MessageExample" resultType="java.lang.Long">
    select count(*) from nole206_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nole206_message
    <set>
      <if test="record.id != null">
        `nole206_id` = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nole200Id != null">
        `nole200_id` = #{record.nole200Id,jdbcType=BIGINT},
      </if>
      <if test="record.gmtCreate != null">
        `gmt_create` = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.content != null">
        `content` = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.availableOrNot != null">
        `available_or_not` = #{record.availableOrNot,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nole206_message
    set `nole206_id` = #{record.id,jdbcType=BIGINT},
      `nole200_id` = #{record.nole200Id,jdbcType=BIGINT},
      `gmt_create` = #{record.gmtCreate,jdbcType=TIMESTAMP},
      `type` = #{record.type,jdbcType=CHAR},
      `content` = #{record.content,jdbcType=VARCHAR},
      `available_or_not` = #{record.availableOrNot,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206Message">
    update nole206_message
    <set>
      <if test="nole200Id != null">
        `nole200_id` = #{nole200Id,jdbcType=BIGINT},
      </if>
      <if test="gmtCreate != null">
        `gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=CHAR},
      </if>
      <if test="content != null">
        `content` = #{content,jdbcType=VARCHAR},
      </if>
      <if test="availableOrNot != null">
        `available_or_not` = #{availableOrNot,jdbcType=CHAR},
      </if>
    </set>
    where `nole206_id` = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206Message">
    update nole206_message
    set `nole200_id` = #{nole200Id,jdbcType=BIGINT},
      `gmt_create` = #{gmtCreate,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=CHAR},
      `content` = #{content,jdbcType=VARCHAR},
      `available_or_not` = #{availableOrNot,jdbcType=CHAR}
    where `nole206_id` = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.jxyd.nole.jpa.mysql.alpha.raw.model.Nole206MessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nole206_message
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>